name: CI

on:
  push:
    branches: [ci, main, staging]
  pull_request:
    branches: [ci, main, staging]

env:
  MIX_ENV: test


jobs:
  verify:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['22.2.7']
        elixir: ['1.11']
     
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: my_expenses_test
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Save cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
            
      - name: Install Mix Dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true' #impedirá a execução dos comandos se houver uma entrada de cache correspondente
        run: mix deps.get
 
      - name: Run Check Formatting 
        run: mix format --check-formatted

      - name: Run Credo 
        run: mix credo --strict --ignore refactor
      
      - name: Run Coveralls 
        run: mix coveralls