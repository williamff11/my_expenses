name: CI

on:
  push:
    branches: [ci, main, staging]
  pull_request:
    branches: [ci, main, staging]

env:
  MIX_ENV: test

jobs:
  deps:
    name: Install Deps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['22.2.7']
        elixir: ['1.11']

    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: my_expenses_test
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      # - uses: actions/cache@v1
      #   id: deps-cache
      #   with:
      #     path: deps
      #     key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      # - uses: actions/cache@v1
      #   id: build-cache
      #   with:
      #     path: _build
      #     key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

        # - uses: actions/cache@v1
        #   with:
        #     path: ${{ steps.yarn-cache.outputs.dir }}
        #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        #     restore-keys: |
        #       ${{ runner.os }}-yarn-
        
      - name: Install deps
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile

      - run: mix format --check-formatted
      - run: mix credo --strict --ignore refactor

  # static_code_analysis:
  #   name: Code Analysis
  #   needs: deps
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       otp: ['22.2.7']
  #       elixir: ['1.11']
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
        
  #     - name: Setup
  #       uses: erlef/setup-elixir@v1
  #       with:
  #         elixir-version: ${{ matrix.elixir }}
  #         otp-version: ${{ matrix.otp }}
      
  #     - name: Check Code Format
  #       run: mix format --check-formatted

  #     - name: Run Credo
  #       run: mix credo --strict --ignore refactor

  # unit_tests:
    # name: Unit Tests
    # needs: deps
    # runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     otp: ['23.0.0']
    #     elixir: ['1.11.4']
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2
    #     with:
    #       fetch-depth: 0
        
    #   - name: Setup
    #     uses: actions/setup-elixir@v1
    #     with:
    #       elixir-version: ${{ matrix.elixir }}
    #       otp-version: ${{ matrix.otp }}
      
    #   - name: Run tests
    #     run: mix test --slowest 10